name: Convert Loon Plugins to Egern Modules

# 触发工作流的事件
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 权限设置
permissions:
  contents: write

jobs:
  convert-plugins:
    runs-on: ubuntu-latest
    
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      # 4. 创建转换脚本
      - name: Create converter script
        run: |
          cat << 'EOF' > convert_plugin.py
          import os
          import re
          import yaml

          CONVERSION_RULES = {
              "#!name": "name",
              "#desc": "description",
              "#lopenUrl": "open_url",
              "#!author": "author",
              "#!tag": "tag",
              "#licon": "icon",
              "#!date": "date",
          }

          RULES_SECTION = {
              "DOMAIN": "rules",
              "URL-REGEX": "rules",
              "AND": "rules",
              "302": "rules",
              "mock-response-body": "map_locals",
              "reject-dict": "map_locals",
              "response-body-json-del": "body_rewrites",
              "response-body-json-jq": "body_rewrites",
          }

          SCRIPT_SECTION = {
              "http-response": "scriptings"
          }

          MITM_SECTION = {
              "hostname": "mitm"
          }

          def convert_plugin_to_yaml(plugin_content):
              yaml_data = {}
              for line in plugin_content.splitlines():
                  line = line.strip()
                  for key, new_key in CONVERSION_RULES.items():
                      if line.startswith(key):
                          yaml_data[new_key] = line.split('»')[-1].strip()
              rules = []
              scripts = []
              mitm_list = []
              for line in plugin_content.splitlines():
                  line = line.strip()
                  for key, section in RULES_SECTION.items():
                      if key in line:
                          rules.append(line)
                  for key, section in SCRIPT_SECTION.items():
                      if key in line:
                          scripts.append(line)
                  if "hostname =" in line:
                      mitm_list = line.split('=')[-1].strip().split(',')
              if rules:
                  yaml_data['rules'] = rules
              if scripts:
                  yaml_data['scriptings'] = scripts
              if mitm_list:
                  yaml_data['mitm'] = {'hostnames': {'includes': [host.strip() for host in mitm_list]}}
              return yaml_data

          def main():
              plugin_dir = "Loon/Plugin/"
              yaml_dir = "Egern/Module/"
              os.makedirs(yaml_dir, exist_ok=True)
              for filename in os.listdir(plugin_dir):
                  if filename.endswith(".plugin"):
                      plugin_path = os.path.join(plugin_dir, filename)
                      yaml_filename = filename.replace('.plugin', '.yaml')
                      yaml_path = os.path.join(yaml_dir, yaml_filename)
                      try:
                          with open(plugin_path, 'r', encoding='utf-8') as f:
                              plugin_content = f.read()
                          yaml_data = convert_plugin_to_yaml(plugin_content)
                          with open(yaml_path, 'w', encoding='utf-8') as f:
                              yaml.dump(yaml_data, f, allow_unicode=True, default_flow_style=False, indent=4)
                          print(f"✅ 转换成功: {filename} → {yaml_filename}")
                      except Exception as e:
                          print(f"❌ 转换失败: {filename}，错误信息: {e}")

          if __name__ == "__main__":
              main()
          EOF

      # 5. 运行转换脚本
      - name: Run conversion
        run: python convert.py

      # 6. 提交转换后的文件
      - name: Commit changes
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add Egern/Module/*
          git diff --staged --quiet || git commit -m "Convert Loon plugins to Egern modules"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}